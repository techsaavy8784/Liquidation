{
  "address": "0xA0A8630eAbcBF50678db4ADFb6ef96C6a570216b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_utilizationOptimal",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "_kp",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "_updateInterval",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ACCEPTED_RANGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DECIMAL_POINTS",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "debt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "previousInterestRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastUpdateTimestamp",
          "type": "uint256"
        }
      ],
      "name": "getInterestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pidParams",
      "outputs": [
        {
          "internalType": "int256",
          "name": "utilizationOptimal",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "kp",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x87c92f3c5ff89a50ef68082cff86e747e025119bbb85dcf855ea2e0c168fac4a",
  "receipt": {
    "to": null,
    "from": "0x48872D69A9591153c5220381C953752f5894ff05",
    "contractAddress": "0xA0A8630eAbcBF50678db4ADFb6ef96C6a570216b",
    "transactionIndex": 47,
    "gasUsed": "333182",
    "logsBloom": "0x
    "blockHash": "0x1712f6c7678ff15bef2e0a2b92179b5bc7017712b5bbc58f53f39736a21520ff",
    "transactionHash": "0x87c92f3c5ff89a50ef68082cff86e747e025119bbb85dcf855ea2e0c168fac4a",
    "logs": [
      {
        "transactionIndex": 47,
        "blockNumber": 20032529,
        "transactionHash": "0x87c92f3c5ff89a50ef68082cff86e747e025119bbb85dcf855ea2e0c168fac4a",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000048872d69a9591153c5220381c953752f5894ff05",
          "0x000000000000000000000000c6869257205e20c2a43cb31345db534aecb49f6e"
        ],
        "data": "0x000000000000000000000000000000000000000000000000001d97ae7ce38c0000000000000000000000000000000000000000000000000c1f059f804e6c42f40000000000000000000000000000000000000000000007e3e941b4f75e49b94f00000000000000000000000000000000000000000000000c1ee807d1d188b6f40000000000000000000000000000000000000000000007e3e95f4ca5db2d454f",
        "logIndex": 299,
        "blockHash": "0x1712f6c7678ff15bef2e0a2b92179b5bc7017712b5bbc58f53f39736a21520ff"
      }
    ],
    "blockNumber": 20032529,
    "cumulativeGasUsed": "8595603",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "800000000000000000",
    "50000000000000000",
    "1500"
  ],
  "solcInputHash": "6d92413c800e1feb51432e172a193baa",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_utilizationOptimal\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"_kp\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_updateInterval\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ACCEPTED_RANGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DECIMAL_POINTS\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"previousInterestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"getInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pidParams\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"utilizationOptimal\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"kp\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InterestRateModel.sol\":\"InterestRateModel\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/InterestRateModel.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nimport './lib/EasyMath.sol';\\n\\ncontract InterestRateModel {\\n    using EasyMath for int256;\\n\\n    uint256 public constant ACCEPTED_RANGE = 5e16;\\n    int256 public constant DECIMAL_POINTS = 1e18;\\n\\n    uint256 public updateInterval;\\n\\n    struct PIDParams {\\n        int256 utilizationOptimal;\\n        int256 kp;\\n    }\\n\\n    PIDParams public pidParams;\\n\\n    constructor(int256 _utilizationOptimal, int256 _kp, uint256 _updateInterval) {\\n        pidParams = PIDParams(_utilizationOptimal, _kp);\\n        updateInterval = _updateInterval;\\n    }\\n\\n    function getInterestRate(\\n        uint256 debt,\\n        uint256 liquidity,\\n        uint256 previousInterestRate,\\n        uint256 lastUpdateTimestamp\\n    ) external view returns (uint256, uint256) {\\n        uint256 timeDelta = block.timestamp - lastUpdateTimestamp;\\n        if (timeDelta < updateInterval || liquidity == 0) return (previousInterestRate, lastUpdateTimestamp);\\n\\n        int256 u = int256(debt) * DECIMAL_POINTS / int256(liquidity);\\n\\n        int256 error = u - pidParams.utilizationOptimal;\\n        if (error.abs() <= ACCEPTED_RANGE) {\\n            error = 0;\\n        }\\n        int256 p = pidParams.kp * error / DECIMAL_POINTS;\\n        int256 newInterestRate = int256(previousInterestRate) + p.toBasisPoint();\\n\\n        if (newInterestRate < 0 || debt == 0) {\\n            newInterestRate = 0;\\n        }\\n        return (uint256(newInterestRate), block.timestamp);\\n    }\\n}\\n\",\"keccak256\":\"0xaead876af93a43cd0ebe30cb039eff7b4970d0aed8299507f8f77cdb6a7df166\",\"license\":\"BUSL-1.1\"},\"contracts/lib/EasyMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.7;\\n\\nlibrary EasyMath {\\n    function abs(int256 x) internal pure returns (uint256) {\\n        return x <= 0 ? uint256(-x) : uint256(x);\\n    }\\n\\n    function toShare(uint256 amount, uint256 totalAmount, uint256 totalShares) internal pure returns (uint256) {\\n        if (totalShares == 0 || totalAmount == 0) {\\n            return amount;\\n        }\\n        return amount * totalShares / totalAmount;\\n    }\\n\\n    function toAmount(uint256 share, uint256 totalAmount, uint256 totalShares) internal pure returns (uint256) {\\n        if (totalShares == 0 || totalAmount == 0) {\\n            return 0;\\n        }\\n        return share * totalAmount / totalShares;\\n    }\\n\\n    /// from 18 decimals to basis points (4 decimals)\\n    function toBasisPoint(uint256 amount) internal pure returns (uint256) {\\n        return amount / 1e14;\\n    }\\n\\n    /// from basis points (4 decimals) ot 18 decimals\\n    function fromBasisPoint(uint256 amount) internal pure returns (uint256) {\\n        return amount * 1e14;\\n    }\\n\\n    /// from 18 decimals to basis points (4 decimals)\\n    function toBasisPoint(int256 amount) internal pure returns (int256) {\\n        return amount / 1e14;\\n    }\\n\\n    /// from basis points (4 decimals) ot 18 decimals\\n    function fromBasisPoint(int256 amount) internal pure returns (int256) {\\n        return amount * 1e14;\\n    }\\n}\\n\",\"keccak256\":\"0x6fad7557ec8708b17bfe6919acf2fb2ad59635591a12d82a8ba662786dd6e019\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161046338038061046383398101604081905261002f91610053565b60408051808201909152838152602001829052600192909255600255600055610081565b60008060006060848603121561006857600080fd5b8351925060208401519150604084015190509250925092565b6103d3806100906000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063597548c61461005c578063bccba79a1461007d578063ce47696f146100a0578063e1d78c2e146100af578063fd2c80ae146100c2575b600080fd5b61006a66b1a2bc2ec5000081565b6040519081526020015b60405180910390f35b60015460025461008b919082565b60408051928352602083019190915201610074565b61006a670de0b6b3a764000081565b61008b6100bd3660046101e0565b6100cb565b61006a60005481565b600080806100d98442610353565b90506000548110806100e9575085155b156100fa57848492509250506101a6565b60008661010f670de0b6b3a76400008a61028f565b6101199190610253565b60015490915060009061012c9083610314565b905066b1a2bc2ec5000061013f826101af565b11610148575060005b6000670de0b6b3a7640000826001800154610163919061028f565b61016d9190610253565b9050600061017a826101ce565b610184908a610212565b9050600081128061019357508a155b1561019c575060005b9550429450505050505b94509492505050565b6000808213156101bf57816101c8565b6101c88261036a565b92915050565b60006101c8655af3107a400083610253565b600080600080608085870312156101f657600080fd5b5050823594602084013594506040840135936060013592509050565b600080821280156001600160ff1b038490038513161561023457610234610387565b600160ff1b839003841281161561024d5761024d610387565b50500190565b60008261027057634e487b7160e01b600052601260045260246000fd5b600160ff1b82146000198414161561028a5761028a610387565b500590565b60006001600160ff1b03818413828413808216868404861116156102b5576102b5610387565b600160ff1b60008712828116878305891216156102d4576102d4610387565b600087129250878205871284841616156102f0576102f0610387565b8785058712818416161561030657610306610387565b505050929093029392505050565b60008083128015600160ff1b85018412161561033257610332610387565b6001600160ff1b038401831381161561034d5761034d610387565b50500390565b60008282101561036557610365610387565b500390565b6000600160ff1b82141561038057610380610387565b5060000390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e0a80ced1d165611742483f469f02fac1406d75f9896c250fbcfa7e1d8c3460064736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063597548c61461005c578063bccba79a1461007d578063ce47696f146100a0578063e1d78c2e146100af578063fd2c80ae146100c2575b600080fd5b61006a66b1a2bc2ec5000081565b6040519081526020015b60405180910390f35b60015460025461008b919082565b60408051928352602083019190915201610074565b61006a670de0b6b3a764000081565b61008b6100bd3660046101e0565b6100cb565b61006a60005481565b600080806100d98442610353565b90506000548110806100e9575085155b156100fa57848492509250506101a6565b60008661010f670de0b6b3a76400008a61028f565b6101199190610253565b60015490915060009061012c9083610314565b905066b1a2bc2ec5000061013f826101af565b11610148575060005b6000670de0b6b3a7640000826001800154610163919061028f565b61016d9190610253565b9050600061017a826101ce565b610184908a610212565b9050600081128061019357508a155b1561019c575060005b9550429450505050505b94509492505050565b6000808213156101bf57816101c8565b6101c88261036a565b92915050565b60006101c8655af3107a400083610253565b600080600080608085870312156101f657600080fd5b5050823594602084013594506040840135936060013592509050565b600080821280156001600160ff1b038490038513161561023457610234610387565b600160ff1b839003841281161561024d5761024d610387565b50500190565b60008261027057634e487b7160e01b600052601260045260246000fd5b600160ff1b82146000198414161561028a5761028a610387565b500590565b60006001600160ff1b03818413828413808216868404861116156102b5576102b5610387565b600160ff1b60008712828116878305891216156102d4576102d4610387565b600087129250878205871284841616156102f0576102f0610387565b8785058712818416161561030657610306610387565b505050929093029392505050565b60008083128015600160ff1b85018412161561033257610332610387565b6001600160ff1b038401831381161561034d5761034d610387565b50500390565b60008282101561036557610365610387565b500390565b6000600160ff1b82141561038057610380610387565b5060000390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e0a80ced1d165611742483f469f02fac1406d75f9896c250fbcfa7e1d8c3460064736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4000,
        "contract": "contracts/InterestRateModel.sol:InterestRateModel",
        "label": "updateInterval",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 4008,
        "contract": "contracts/InterestRateModel.sol:InterestRateModel",
        "label": "pidParams",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(PIDParams)4005_storage"
      }
    ],
    "types": {
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_struct(PIDParams)4005_storage": {
        "encoding": "inplace",
        "label": "struct InterestRateModel.PIDParams",
        "members": [
          {
            "astId": 4002,
            "contract": "contracts/InterestRateModel.sol:InterestRateModel",
            "label": "utilizationOptimal",
            "offset": 0,
            "slot": "0",
            "type": "t_int256"
          },
          {
            "astId": 4004,
            "contract": "contracts/InterestRateModel.sol:InterestRateModel",
            "label": "kp",
            "offset": 0,
            "slot": "1",
            "type": "t_int256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}